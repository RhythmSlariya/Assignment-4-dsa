#include <iostream>
using namespace std;

#define MAX 5

class Queue {
    int front, rear;
    int arr[MAX];
    
public:
    Queue() {
        front = rear = -1;
    }
    
    bool isEmpty() {
        return front == -1;
    }
    
    bool isFull() {
        return rear == MAX - 1;
    }
    
    void enqueue(int x) {
        if (isFull()) {
            cout << "Queue full, can't add " << x << endl;
            return;
        }
        
        if (isEmpty()) {
            front = rear = 0;
        } else {
            rear++;
        }
        
        arr[rear] = x;
        cout << x << " added to queue" << endl;
    }
    
    void dequeue() {
        if (isEmpty()) {
            cout << "Queue empty, nothing to remove" << endl;
            return;
        }
        
        cout << arr[front] << " removed from queue" << endl;
        
        if (front == rear) {
            front = rear = -1;
        } else {
            front++;
        }
    }
    
    void peek() {
        if (isEmpty()) {
            cout << "Queue empty, nothing to show" << endl;
            return;
        }
        
        cout << "Front item: " << arr[front] << endl;
    }
    
    void display() {
        if (isEmpty()) {
            cout << "Queue is empty" << endl;
            return;
        }
        
        cout << "Queue items: ";
        for (int i = front; i <= rear; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    Queue q;
    int choice, value;
    
    cout << "Queue Operations Program" << endl;
    cout << "Max size: " << MAX << endl << endl;
    
    do {
        cout << "1. Add to queue" << endl;
        cout << "2. Remove from queue" << endl;
        cout << "3. Check if empty" << endl;
        cout << "4. Check if full" << endl;
        cout << "5. Show all items" << endl;
        cout << "6. Show front item" << endl;
        cout << "7. Quit" << endl;
        cout << "Pick an option: ";
        cin >> choice;
        
        switch(choice) {
            case 1:
                cout << "Enter number to add: ";
                cin >> value;
                q.enqueue(value);
                break;
                
            case 2:
                q.dequeue();
                break;
                
            case 3:
                if (q.isEmpty())
                    cout << "Queue is empty" << endl;
                else
                    cout << "Queue has items" << endl;
                break;
                
            case 4:
                if (q.isFull())
                    cout << "Queue is full" << endl;
                else
                    cout << "Queue has space" << endl;
                break;
                
            case 5:
                q.display();
                break;
                
            case 6:
                q.peek();
                break;
                
            case 7:
                cout << "Bye!" << endl;
                break;
                
            default:
                cout << "Invalid option, try again" << endl;
        }
        
        cout << endl;
    } while (choice != 7);
    
    return 0;
}
